---
- name: Update all packages to latest
  yum: name=* state=latest
- name: Install Java 1.7
  yum: name=java-1.7.0-openjdk state=present
# - name: Install basic software
#   yum:
#     name: "{{ item }}"
#     state: present
#   with_items:
#     - java-1.8.0-openjdk
- name: add group "tomcat"
  group: name=tomcat
- name: add user "tomcat"
  user: name=tomcat group=tomcat home=/usr/share/tomcat createhome=no
  state: present
  become: True
  become_method: sudo
- name: Download Tomcat
  get_url: url=http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.61/bin/apache-tomcat-7.0.61.tar.gz dest=/opt/apache-tomcat-7.0.61.tar.gz
- name: Extract archive
  command: chdir=/usr/share /bin/tar xvf /opt/apache-tomcat-7.0.61.tar.gz -C /opt/ creates=/opt/apache-tomcat-7.0.61
- name: Symlink install directory
  file: src=/opt/apache-tomcat-7.0.61 path=/usr/share/tomcat state=link

# - name: Install basic software
#   yum:
#     name: "{{ item }}"
#     state: present
#   with_items:
#     - tomcat8
#     - tomcat8-webapps
#     - tomcat8-docs-webapp
#     - tomcat8-admin-webapps
- name: Change ownership of Tomcat installation
  file: path=/usr/share/tomcat/ owner=tomcat group=tomcat state=directory recurse=yes
#- name: start tomcat
#  shell: sudo service tomcat restart
- name: Configure Tomcat server
  template: src=server.xml dest=/usr/share/tomcat/conf/
  notify: restart tomcat
- name: Configure Tomcat users
  template: src=tomcat-users.xml dest=/usr/share/tomcat/conf/
  notify: restart tomcat
- name: Configure Tomcat external access
  template: src=host-manager.xml dest=/usr/share/tomcat/conf/Catalina/localhost/
  notify: restart tomcat
- name: Ensure boto and boto3 modules are installed
  pip:
    name: "{{ item }}"
  with_items:
    - boto3
    - botocore
  #delegate_to: "{{ ec2_instance_ip }}"
- name: Install Tomcat init script
  copy: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755

- name: Deploy war file
  aws_s3:
    bucket: "testtask-artifacts"
    mode: list
    object: "project-test/sparkjava-war-example/target/sparkjava-hello-world-1.0.war"
    dest: "/usr/share/tomcat/webapps/sparkjava-hello-world-1.0.war"
    mode: get
    overwrite: yes
- name: Start Tomcat
  service: name=tomcat state=started enabled=yes
- name: wait for tomcat to start
  wait_for: port={{http_port}}